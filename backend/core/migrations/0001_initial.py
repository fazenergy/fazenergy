# Generated by Django 5.2.3 on 2025-07-25 03:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OperationsManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Operador')),
                ('cpf_cnpj', models.CharField(max_length=20, unique=True, verbose_name='CPF/CNPJ')),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1, verbose_name='Sexo')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('marital_status', models.CharField(choices=[('single', 'Solteiro(a)'), ('married', 'Casado(a)'), ('divorced', 'Divorciado(a)')], max_length=20, verbose_name='Estado Civil')),
                ('id_document_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número do Documento de Identidade')),
                ('id_document_issuer', models.CharField(blank=True, max_length=20, null=True, verbose_name='Órgão Emissor do Documento')),
                ('city_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('state_abbr', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF')),
                ('cep', models.CharField(blank=True, max_length=8, null=True, verbose_name='CEP')),
                ('address', models.CharField(blank=True, max_length=300, null=True, verbose_name='Endereço')),
                ('number', models.CharField(blank=True, max_length=8, null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('district', models.CharField(blank=True, max_length=300, null=True, verbose_name='Bairro')),
                ('phone', models.CharField(blank=True, max_length=14, null=True, verbose_name='Telefone')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comentário')),
                ('user_permission_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Permissão do Usuário')),
                ('stt_record', models.BooleanField(default=True, verbose_name='Ativo')),
                ('dtt_record', models.DateTimeField(auto_now_add=True, verbose_name='Data Cadastro')),
                ('dtt_update', models.DateTimeField(auto_now=True, verbose_name='Data Atualização')),
            ],
            options={
                'verbose_name': 'Gerente de Operação',
                'verbose_name_plural': 'Gerente de Operações',
                'db_table': 'tb_OperationsManager',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_operator', models.BooleanField(default=False, verbose_name='É Operador?')),
                ('is_affiliate', models.BooleanField(default=False, verbose_name='É Afiliado?')),
                ('image_profile', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Foto de Perfil')),
                ('groups', models.ManyToManyField(blank=True, db_table='tb_UserGroup', related_name='custom_user_set', to='auth.group', verbose_name='Grupo de Usuários')),
                ('user_permissions', models.ManyToManyField(blank=True, db_table='tb_UserPermission', related_name='custom_user_set', to='auth.permission', verbose_name='Permissões')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'db_table': 'tb_User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Affiliate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_type', models.CharField(choices=[('pf', 'PF'), ('pj', 'PJ')], max_length=2, verbose_name='Pessoa')),
                ('cpf_cnpj', models.CharField(max_length=20, unique=True, verbose_name='CPF/CNPJ')),
                ('cep', models.CharField(blank=True, max_length=8, null=True, verbose_name='CEP')),
                ('city_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('state_abbr', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF')),
                ('address', models.CharField(blank=True, max_length=300, null=True, verbose_name='Endereço')),
                ('number', models.CharField(blank=True, max_length=8, null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('district', models.CharField(blank=True, max_length=300, null=True, verbose_name='Bairro')),
                ('phone', models.CharField(blank=True, max_length=14, null=True, verbose_name='Telefone')),
                ('dtt_previous_career', models.DateTimeField(blank=True, null=True, verbose_name='Data Carreira Anterior')),
                ('dtt_current_career', models.DateTimeField(blank=True, null=True, verbose_name='Data Carreira Atual')),
                ('is_root', models.BooleanField(default=False, verbose_name='É Raiz na Rede ? ')),
                ('stt_record', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_in_network', models.BooleanField(default=True, verbose_name='Está na Rede ?')),
                ('accept_lgpd', models.BooleanField(default=False, verbose_name='Aceita LGPD')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comentário')),
                ('dtt_payment_received', models.DateTimeField(blank=True, null=True, verbose_name='Data Recebimento Pagamento')),
                ('dtt_record', models.DateTimeField(auto_now_add=True, verbose_name='Data Cadastro')),
                ('dtt_update', models.DateTimeField(auto_now=True, verbose_name='Data Atualização')),
                ('city_lookup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='location.city')),
            ],
            options={
                'verbose_name': 'Afiliado',
                'verbose_name_plural': 'Afiliados',
                'db_table': 'tb_Affiliate',
            },
        ),
    ]
