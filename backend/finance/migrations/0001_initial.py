# Generated by Django 5.2.3 on 2025-08-01 06:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_initial'),
        ('plans', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GatewayConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Pagarme', max_length=50)),
                ('api_token', models.CharField(max_length=255)),
                ('api_url', models.URLField(help_text='URL da API Pagarme dev. Ex.: https://sdx-api.pagar.me/core/v5/paymentlinks')),
                ('dev_url_hint', models.URLField(blank=True, help_text='URL sandbox Pagarme (só informativo). Ex.: https://sdx-api.pagar.me/core/v5/paymentlinks', null=True)),
                ('postback_url', models.URLField(blank=True, help_text='URL que será chamada como webhook.', null=True)),
                ('redirect_url', models.URLField(blank=True, help_text='URL para redirecionar o cliente após o pagamento.', null=True)),
                ('webhook_token', models.CharField(blank=True, max_length=255, null=True)),
                ('webhook_user', models.CharField(blank=True, max_length=100, null=True)),
                ('webhook_password', models.CharField(blank=True, max_length=255, null=True)),
                ('webhook_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Configuração de Pagamento',
                'verbose_name_plural': 'Configurações de Pagamento',
                'db_table': 'GatewayConfig',
            },
        ),
        migrations.CreateModel(
            name='PaymentLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(choices=[('Adesão Anual', 'Plano de Adesão Anual'), ('Usina Fotovoltaica', 'Usina Fotovoltaica')], default='Adesão Anual', max_length=50, verbose_name='Product')),
                ('gateway', models.CharField(choices=[('pagarme', 'Pagarme'), ('pagseguro', 'PagSeguro')], default='pagarme', max_length=50, verbose_name='Gateway')),
                ('order_id', models.CharField(blank=True, max_length=256, null=True, verbose_name='Order ID')),
                ('code', models.CharField(blank=True, max_length=256, null=True, verbose_name='Code')),
                ('charge_id', models.CharField(blank=True, max_length=256, null=True, verbose_name='Charge ID')),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True, verbose_name='Payment Method')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount')),
                ('paid_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Paid Amount')),
                ('installments', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Installments')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('authorized', 'Authorized'), ('canceled', 'Canceled'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=50, verbose_name='Status')),
                ('url', models.URLField(blank=True, max_length=512, null=True, verbose_name='Payment Link URL')),
                ('barcode', models.CharField(blank=True, max_length=256, null=True, verbose_name='Barcode')),
                ('qrcode', models.CharField(blank=True, max_length=512, null=True, verbose_name='QR Code')),
                ('request_payload', models.TextField(blank=True, null=True, verbose_name='Request Payload')),
                ('response_payload', models.TextField(blank=True, null=True, verbose_name='Response Payload')),
                ('is_captured', models.BooleanField(default=False, verbose_name='Captured?')),
                ('is_canceled', models.BooleanField(default=False, verbose_name='Canceled?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Closed At')),
                ('canceled_at', models.DateTimeField(blank=True, null=True, verbose_name='Canceled At')),
                ('adesion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_links', to='plans.planadesion')),
                ('licensed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_links', to='core.licensed')),
            ],
            options={
                'verbose_name': 'Link de Cobrança',
                'verbose_name_plural': 'Links de Cobranças',
                'db_table': 'PaymentLink',
            },
        ),
        migrations.CreateModel(
            name='VirtualAccount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name_licensed', models.CharField(max_length=150, verbose_name='Nome do Licenciado')),
                ('balance_available', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Saldo Disponível')),
                ('balance_blocked', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Saldo Bloqueado')),
                ('dtt_record', models.DateTimeField(auto_now_add=True, verbose_name='Data Cadastro')),
                ('dtt_update', models.DateTimeField(auto_now=True, verbose_name='Data Atualização')),
                ('licensed', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='virtual_account', to='core.licensed', verbose_name='Licenciado')),
            ],
            options={
                'verbose_name': 'Conta Virtual',
                'verbose_name_plural': 'Contas Virtuais',
                'db_table': 'VirtualAccount',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(max_length=255, verbose_name='Produto')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('status', models.CharField(choices=[('blocked', 'Bloqueado'), ('released', 'Liberado'), ('canceled', 'Cancelado')], default='blocked', max_length=20, verbose_name='Status')),
                ('operation', models.CharField(choices=[('credit', 'Crédito'), ('debit', 'Débito')], max_length=10, verbose_name='Operação')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor')),
                ('is_processed', models.BooleanField(default=False, verbose_name='Processado?')),
                ('reference_date', models.DateField(verbose_name='Data de Referência')),
                ('dtt_record', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('virtual_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='finance.virtualaccount', verbose_name='Conta Virtual')),
            ],
            options={
                'verbose_name': 'Transação',
                'verbose_name_plural': 'Transações',
                'db_table': 'Transaction',
            },
        ),
    ]
